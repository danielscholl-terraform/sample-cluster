parameters:
  environment: ''
  configuration: ''
  forceRun: false

jobs:

- job: Provision_${{ parameters.configuration.jobName }}_${{ parameters.environment }}_ComputeWs
  displayName: Initialize Deploy
  dependsOn: TemplateChangeDetection_${{ parameters.configuration.jobName }}_Deploy
  condition: or(coalesce(variables.FORCE_RUN, ${{ parameters.forceRun }}), eq(dependencies.TemplateChangeDetection_${{ parameters.configuration.jobName }}_Deploy.outputs['${{ parameters.configuration.jobName }}.needs_cicd'], 'true'))

  steps:
  - template: tasks/tf-ws-compute.yml
    parameters:
      terraformWorkspacePrefix: ${{ parameters.configuration.terraformWorkspacePrefix }}
      environmentName: ${{ parameters.environment }}
      enablePrIsolation: ${{ parameters.enablePrIsolation }}
      stepName: ComputeWs

- deployment: Provision_${{ parameters.configuration.jobName }}_${{ parameters.environment }}
  displayName: Execute Deploy
  dependsOn: Provision_${{ parameters.configuration.jobName }}_${{ parameters.environment }}_ComputeWs

  ${{ if parameters.configuration.deploymentTimeoutInMinutes }}:
    timeoutInMinutes: '${{ parameters.configuration.deploymentTimeoutInMinutes }}'

### Required Variables in the Group
###   ARM_SUBSCRIPTION_ID
###   TF_VAR_remote_state_account
###   TF_VAR_remote_state_container
###   TF_VAR_location
###   TF_VAR_spot_max_count
###   TF_VAR_spot_vm_size
  variables:
  - group: 'sample-cluster-variables-${{ parameters.environment }}'

  - name: TF_WORKSPACE_NAME
    value: $[ dependencies.Provision_${{ parameters.configuration.jobName }}_${{ parameters.environment }}_ComputeWs.outputs['ComputeWs.TF_WORKSPACE_NAME'] ]

  - name: RELEASE_ARTIFACT_NAME
    value: $(BUILD_ARTIFACT_NAME)-$(TF_WORKSPACE_NAME)

  - name: ARTIFACT_ROOT
    value: '$(System.DefaultWorkingDirectory)/$(RELEASE_ARTIFACT_NAME)'

  - name: TERRAFORM_TEMPLATE_PATH
    value: ${{ parameters.configuration.terraformTemplatePath }}

  - name: TF_TEMPLATE_WORKING_DIR
    value: '$(System.DefaultWorkingDirectory)/$(RELEASE_ARTIFACT_NAME)/${{ parameters.configuration.terraformTemplatePath }}'

  environment: ${{ parameters.environment }}
  strategy:
    runOnce:
      deploy:
        steps:
        - download: none

        - task: DownloadBuildArtifacts@0
          displayName: 'Download Build Artifacts'
          inputs:
            artifactName: '$(RELEASE_ARTIFACT_NAME)'
            downloadPath: '$(System.DefaultWorkingDirectory)'

        - template: tasks/tf-ws-create.yml
        - template: tasks/tf-apply.yml

        - ${{ if containsValue(parameters.configuration.environmentsToTeardownAfterRelease, parameters.environment) }}:
          - template: tasks/tf-destroy.yml
            parameters:
              environmentName: ${{ parameters.environment }}
