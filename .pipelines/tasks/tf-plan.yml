parameters:
  environmentName: ''

steps:
  - task: AzureCLI@1
    displayName: 'TF Plan'
    env:
      TF_VAR_remote_state_account: $(TF_VAR_remote_state_account)
      TF_VAR_remote_state_container: $(TF_VAR_remote_state_container)
      TF_VAR_location: $(TF_VAR_location)
      TF_VAR_spot_max_count: $(TF_VAR_spot_max_count)
      TF_VAR_spot_vm_size: $(TF_VAR_spot_vm_size)
      TF_VAR_environment: ${{ parameters.environmentName }}
    inputs:
      azureSubscription: '$(SERVICE_CONNECTION_NAME)'
      addSpnToEnvironment: true
      scriptLocation: inlineScript
      inlineScript: |
        #!/usr/bin/env bash
        set -euo pipefail
        set -o nounset

        ## This Script requires the following variables to be available. ##
        # Required Variable = TF_VERSION
        # Required Variable = ARM_SUBSCRIPTION_ID
        # Required Variable = TF_VAR_remote_state_account
        # Required Variable = TF_VAR_remote_state_container

        echo "ServicePrincipalId:  $servicePrincipalId"
        env |grep ARM
        env |grep TF

        function terraformVersionCheck() {
            if [[ $(which terraform) && $(terraform --version | head -n1 | cut -d" " -f2 | cut -c 2\-) == $TF_VERSION ]]; then
                echo "Terraform version check completed"
              else
                TF_ZIP_TARGET="https://releases.hashicorp.com/terraform/$TF_VERSION/terraform_${TF_VERSION}_linux_amd64.zip"
                echo "Info: installing $TF_VERSION, target: $TF_ZIP_TARGET"

                wget $TF_ZIP_TARGET -q
                unzip -q "terraform_${TF_VERSION}_linux_amd64.zip"
                sudo mv terraform /usr/local/bin
                rm *.zip
            fi

            terraform -version

            # Assert that jq is available, and install if it's not
            command -v jq >/dev/null 2>&1 || { echo >&2 "Installing jq"; sudo apt install -y jq; }
        }

        terraformVersionCheck
        cd $TF_TEMPLATE_WORKING_DIR

        rm -f *.out                   # Clear all previous plans
        chmod -f 752 *.sh || true     # Setting the scripts to be run as executable

        export ARM_TENANT_ID=$tenantId
        export ARM_CLIENT_SECRET=$servicePrincipalKey
        export ARM_CLIENT_ID=$servicePrincipalId
        export ARM_ACCESS_KEY=$(az storage account keys list --subscription "$ARM_SUBSCRIPTION_ID" --account-name "$(TF_VAR_remote_state_account)" --query "[0].value" --output tsv)

        TF_PLAN_FILE="${TF_WORKSPACE_NAME}_plan.out"
        TF_CLI_ARGS=${TF_CLI_ARGS:-}

        terraform plan $TF_CLI_ARGS -input=false -out $TF_PLAN_FILE
