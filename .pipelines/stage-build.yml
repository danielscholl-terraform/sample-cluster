parameters:
  environment: ''
  configuration: ''
  forceRun: false

jobs:

- job: Build_${{ parameters.configuration.jobName }}_${{ parameters.environment }}_ComputeWs
  displayName: Initialize Build
  dependsOn: TemplateChangeDetection_${{ parameters.configuration.jobName }}_Build
  condition: or(coalesce(variables.FORCE_RUN, ${{ parameters.forceRun }}), eq(dependencies.TemplateChangeDetection_${{ parameters.configuration.jobName }}_Build.outputs['${{ parameters.configuration.jobName }}.needs_cicd'], 'true'))

  steps:
  - template: tasks/tf-ws-compute.yml
    parameters:
      terraformWorkspacePrefix: ${{ parameters.configuration.terraformWorkspacePrefix }}
      environmentName: ${{ parameters.environment }}
      enablePrIsolation: ${{ parameters.enablePrIsolation }}
      stepName: ComputeWs

- job: Build_${{ parameters.configuration.jobName }}_${{ parameters.environment }}
  displayName: Execute Build
  dependsOn: Build_${{ parameters.configuration.jobName }}_${{ parameters.environment }}_ComputeWs


### Required Variables in the Group
###   ARM_SUBSCRIPTION_ID
###   TF_VAR_remote_state_account
###   TF_VAR_remote_state_container
###   TF_VAR_location
###   TF_VAR_spot_max_count
###   TF_VAR_spot_vm_size
  variables:
  - group: 'sample-cluster-variables-${{ parameters.environment }}'

  - name: TF_WORKSPACE_NAME
    value: $[ dependencies.Build_${{ parameters.configuration.jobName }}_${{ parameters.environment }}_ComputeWs.outputs['ComputeWs.TF_WORKSPACE_NAME'] ]

  - name: ARTIFACT_ROOT
    value: '$(System.DefaultWorkingDirectory)/$(BUILD_ARTIFACT_NAME)'

  - name: TERRAFORM_TEMPLATE_PATH
    value: ${{ parameters.configuration.terraformModulePath }}

  - name: TF_TEMPLATE_WORKING_DIR
    value: '$(System.DefaultWorkingDirectory)/$(BUILD_ARTIFACT_NAME)/${{ parameters.configuration.terraformTemplatePath }}'

  workspace:
    clean: all

  steps:

  - task: DownloadBuildArtifacts@0
    displayName: 'Download'
    inputs:
      artifactName: $(BUILD_ARTIFACT_NAME)
      downloadPath: '$(System.DefaultWorkingDirectory)'

  - template: tasks/debug-variables.yml
    parameters:
      disable: false
  - template: tasks/tf-ws-create.yml
  - template: tasks/tf-plan.yml
    parameters:
      environmentName: ${{ parameters.environment }}

  - task: CopyFiles@2
    displayName: Copy State for next Stage
    inputs:
      contents: '**'
      sourceFolder: '$(System.DefaultWorkingDirectory)/$(BUILD_ARTIFACT_NAME)'
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    displayName: Publish
    inputs:
      parallel: true
      parallelCount: 8
      artifactName: '$(BUILD_ARTIFACT_NAME)-$(TF_WORKSPACE_NAME)'
      pathToPublish: $(Build.ArtifactStagingDirectory)
